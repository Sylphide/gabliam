// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`cache put cache args object 1`] = `"hi test"`;

exports[`cache put cache args object 2`] = `"hi test"`;

exports[`cache put cache args object 3`] = `
MemoryCache {
  "name": "hi",
  "options": undefined,
  "store": LRUCache {
    Symbol(max): Infinity,
    Symbol(lengthCalculator): [Function],
    Symbol(allowStale): false,
    Symbol(maxAge): 0,
    Symbol(dispose): undefined,
    Symbol(noDisposeOnSet): false,
    Symbol(cache): Map {
      "{\\"name\\":\\"test\\"}" => Node {
        "list": Yallist {
          "head": [Circular],
          "length": 1,
          "tail": [Circular],
        },
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "{\\"name\\":\\"test\\"}",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
    },
    Symbol(lruList): Yallist {
      "head": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "{\\"name\\":\\"test\\"}",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
      "length": 1,
      "tail": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "{\\"name\\":\\"test\\"}",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
    },
    Symbol(length): 1,
  },
}
`;

exports[`cache put cache condition + key 1`] = `"hi test"`;

exports[`cache put cache condition + key 2`] = `"hi test"`;

exports[`cache put cache condition + key 3`] = `"hi test"`;

exports[`cache put cache condition + key 4`] = `
MemoryCache {
  "name": "hi",
  "options": undefined,
  "store": LRUCache {
    Symbol(max): Infinity,
    Symbol(lengthCalculator): [Function],
    Symbol(allowStale): false,
    Symbol(maxAge): 0,
    Symbol(dispose): undefined,
    Symbol(noDisposeOnSet): false,
    Symbol(cache): Map {
      "test" => Node {
        "list": Yallist {
          "head": [Circular],
          "length": 1,
          "tail": [Circular],
        },
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "test",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
    },
    Symbol(lruList): Yallist {
      "head": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "test",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
      "length": 1,
      "tail": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "test",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
    },
    Symbol(length): 1,
  },
}
`;

exports[`cache put cache condition + key 5`] = `"hi test"`;

exports[`cache put cache condition + key 6`] = `
MemoryCache {
  "name": "hi",
  "options": undefined,
  "store": LRUCache {
    Symbol(max): Infinity,
    Symbol(lengthCalculator): [Function],
    Symbol(allowStale): false,
    Symbol(maxAge): 0,
    Symbol(dispose): undefined,
    Symbol(noDisposeOnSet): false,
    Symbol(cache): Map {
      "test" => Node {
        "list": Yallist {
          "head": [Circular],
          "length": 1,
          "tail": [Circular],
        },
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "test",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
    },
    Symbol(lruList): Yallist {
      "head": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "test",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
      "length": 1,
      "tail": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "test",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
    },
    Symbol(length): 1,
  },
}
`;

exports[`cache put cache condition 1`] = `"hi test"`;

exports[`cache put cache condition 2`] = `"hi test"`;

exports[`cache put cache condition 3`] = `
MemoryCache {
  "name": "hi",
  "options": undefined,
  "store": LRUCache {
    Symbol(max): Infinity,
    Symbol(lengthCalculator): [Function],
    Symbol(allowStale): false,
    Symbol(maxAge): 0,
    Symbol(dispose): undefined,
    Symbol(noDisposeOnSet): false,
    Symbol(cache): Map {
      "{\\"name\\":\\"test\\",\\"id\\":2}" => Node {
        "list": Yallist {
          "head": [Circular],
          "length": 1,
          "tail": [Circular],
        },
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "{\\"name\\":\\"test\\",\\"id\\":2}",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
    },
    Symbol(lruList): Yallist {
      "head": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "{\\"name\\":\\"test\\",\\"id\\":2}",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
      "length": 1,
      "tail": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "{\\"name\\":\\"test\\",\\"id\\":2}",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
    },
    Symbol(length): 1,
  },
}
`;

exports[`cache put cache condition 4`] = `"hi test"`;

exports[`cache put cache condition 5`] = `
MemoryCache {
  "name": "hi",
  "options": undefined,
  "store": LRUCache {
    Symbol(max): Infinity,
    Symbol(lengthCalculator): [Function],
    Symbol(allowStale): false,
    Symbol(maxAge): 0,
    Symbol(dispose): undefined,
    Symbol(noDisposeOnSet): false,
    Symbol(cache): Map {
      "{\\"name\\":\\"test\\",\\"id\\":2}" => Node {
        "list": Yallist {
          "head": [Circular],
          "length": 1,
          "tail": [Circular],
        },
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "{\\"name\\":\\"test\\",\\"id\\":2}",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
    },
    Symbol(lruList): Yallist {
      "head": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "{\\"name\\":\\"test\\",\\"id\\":2}",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
      "length": 1,
      "tail": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "{\\"name\\":\\"test\\",\\"id\\":2}",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
    },
    Symbol(length): 1,
  },
}
`;

exports[`cache put cache key 1`] = `"hi test"`;

exports[`cache put cache key 2`] = `"hi test"`;

exports[`cache put cache key 3`] = `
MemoryCache {
  "name": "hi",
  "options": undefined,
  "store": LRUCache {
    Symbol(max): Infinity,
    Symbol(lengthCalculator): [Function],
    Symbol(allowStale): false,
    Symbol(maxAge): 0,
    Symbol(dispose): undefined,
    Symbol(noDisposeOnSet): false,
    Symbol(cache): Map {
      "1" => Node {
        "list": Yallist {
          "head": Node {
            "list": [Circular],
            "next": [Circular],
            "prev": null,
            "value": Entry {
              "key": "2",
              "length": 1,
              "maxAge": 0,
              "now": 0,
              "value": "hi test",
            },
          },
          "length": 2,
          "tail": [Circular],
        },
        "next": null,
        "prev": Node {
          "list": Yallist {
            "head": [Circular],
            "length": 2,
            "tail": [Circular],
          },
          "next": [Circular],
          "prev": null,
          "value": Entry {
            "key": "2",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test",
          },
        },
        "value": Entry {
          "key": "1",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
      "2" => Node {
        "list": Yallist {
          "head": [Circular],
          "length": 2,
          "tail": Node {
            "list": [Circular],
            "next": null,
            "prev": [Circular],
            "value": Entry {
              "key": "1",
              "length": 1,
              "maxAge": 0,
              "now": 0,
              "value": "hi test",
            },
          },
        },
        "next": Node {
          "list": Yallist {
            "head": [Circular],
            "length": 2,
            "tail": [Circular],
          },
          "next": null,
          "prev": [Circular],
          "value": Entry {
            "key": "1",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test",
          },
        },
        "prev": null,
        "value": Entry {
          "key": "2",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
    },
    Symbol(lruList): Yallist {
      "head": Node {
        "list": [Circular],
        "next": Node {
          "list": [Circular],
          "next": null,
          "prev": [Circular],
          "value": Entry {
            "key": "1",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test",
          },
        },
        "prev": null,
        "value": Entry {
          "key": "2",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
      "length": 2,
      "tail": Node {
        "list": [Circular],
        "next": null,
        "prev": Node {
          "list": [Circular],
          "next": [Circular],
          "prev": null,
          "value": Entry {
            "key": "2",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test",
          },
        },
        "value": Entry {
          "key": "1",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
    },
    Symbol(length): 2,
  },
}
`;

exports[`cache put cache key 4`] = `"hi test"`;

exports[`cache put cache key 5`] = `
MemoryCache {
  "name": "hi",
  "options": undefined,
  "store": LRUCache {
    Symbol(max): Infinity,
    Symbol(lengthCalculator): [Function],
    Symbol(allowStale): false,
    Symbol(maxAge): 0,
    Symbol(dispose): undefined,
    Symbol(noDisposeOnSet): false,
    Symbol(cache): Map {
      "1" => Node {
        "list": Yallist {
          "head": [Circular],
          "length": 2,
          "tail": Node {
            "list": [Circular],
            "next": null,
            "prev": [Circular],
            "value": Entry {
              "key": "2",
              "length": 1,
              "maxAge": 0,
              "now": 0,
              "value": "hi test",
            },
          },
        },
        "next": Node {
          "list": Yallist {
            "head": [Circular],
            "length": 2,
            "tail": [Circular],
          },
          "next": null,
          "prev": [Circular],
          "value": Entry {
            "key": "2",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test",
          },
        },
        "prev": null,
        "value": Entry {
          "key": "1",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
      "2" => Node {
        "list": Yallist {
          "head": Node {
            "list": [Circular],
            "next": [Circular],
            "prev": null,
            "value": Entry {
              "key": "1",
              "length": 1,
              "maxAge": 0,
              "now": 0,
              "value": "hi test",
            },
          },
          "length": 2,
          "tail": [Circular],
        },
        "next": null,
        "prev": Node {
          "list": Yallist {
            "head": [Circular],
            "length": 2,
            "tail": [Circular],
          },
          "next": [Circular],
          "prev": null,
          "value": Entry {
            "key": "1",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test",
          },
        },
        "value": Entry {
          "key": "2",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
    },
    Symbol(lruList): Yallist {
      "head": Node {
        "list": [Circular],
        "next": Node {
          "list": [Circular],
          "next": null,
          "prev": [Circular],
          "value": Entry {
            "key": "2",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test",
          },
        },
        "prev": null,
        "value": Entry {
          "key": "1",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
      "length": 2,
      "tail": Node {
        "list": [Circular],
        "next": null,
        "prev": Node {
          "list": [Circular],
          "next": [Circular],
          "prev": null,
          "value": Entry {
            "key": "1",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test",
          },
        },
        "value": Entry {
          "key": "2",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
    },
    Symbol(length): 2,
  },
}
`;

exports[`cache put cache key array 1`] = `"hi test"`;

exports[`cache put cache key array 2`] = `"hi test"`;

exports[`cache put cache key array 3`] = `
MemoryCache {
  "name": "hi",
  "options": undefined,
  "store": LRUCache {
    Symbol(max): Infinity,
    Symbol(lengthCalculator): [Function],
    Symbol(allowStale): false,
    Symbol(maxAge): 0,
    Symbol(dispose): undefined,
    Symbol(noDisposeOnSet): false,
    Symbol(cache): Map {
      "1" => Node {
        "list": Yallist {
          "head": Node {
            "list": [Circular],
            "next": [Circular],
            "prev": null,
            "value": Entry {
              "key": "2",
              "length": 1,
              "maxAge": 0,
              "now": 0,
              "value": "hi test",
            },
          },
          "length": 2,
          "tail": [Circular],
        },
        "next": null,
        "prev": Node {
          "list": Yallist {
            "head": [Circular],
            "length": 2,
            "tail": [Circular],
          },
          "next": [Circular],
          "prev": null,
          "value": Entry {
            "key": "2",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test",
          },
        },
        "value": Entry {
          "key": "1",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
      "2" => Node {
        "list": Yallist {
          "head": [Circular],
          "length": 2,
          "tail": Node {
            "list": [Circular],
            "next": null,
            "prev": [Circular],
            "value": Entry {
              "key": "1",
              "length": 1,
              "maxAge": 0,
              "now": 0,
              "value": "hi test",
            },
          },
        },
        "next": Node {
          "list": Yallist {
            "head": [Circular],
            "length": 2,
            "tail": [Circular],
          },
          "next": null,
          "prev": [Circular],
          "value": Entry {
            "key": "1",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test",
          },
        },
        "prev": null,
        "value": Entry {
          "key": "2",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
    },
    Symbol(lruList): Yallist {
      "head": Node {
        "list": [Circular],
        "next": Node {
          "list": [Circular],
          "next": null,
          "prev": [Circular],
          "value": Entry {
            "key": "1",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test",
          },
        },
        "prev": null,
        "value": Entry {
          "key": "2",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
      "length": 2,
      "tail": Node {
        "list": [Circular],
        "next": null,
        "prev": Node {
          "list": [Circular],
          "next": [Circular],
          "prev": null,
          "value": Entry {
            "key": "2",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test",
          },
        },
        "value": Entry {
          "key": "1",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
    },
    Symbol(length): 2,
  },
}
`;

exports[`cache put cache key array 4`] = `"hi test"`;

exports[`cache put cache key array 5`] = `
MemoryCache {
  "name": "hi",
  "options": undefined,
  "store": LRUCache {
    Symbol(max): Infinity,
    Symbol(lengthCalculator): [Function],
    Symbol(allowStale): false,
    Symbol(maxAge): 0,
    Symbol(dispose): undefined,
    Symbol(noDisposeOnSet): false,
    Symbol(cache): Map {
      "1" => Node {
        "list": Yallist {
          "head": [Circular],
          "length": 2,
          "tail": Node {
            "list": [Circular],
            "next": null,
            "prev": [Circular],
            "value": Entry {
              "key": "2",
              "length": 1,
              "maxAge": 0,
              "now": 0,
              "value": "hi test",
            },
          },
        },
        "next": Node {
          "list": Yallist {
            "head": [Circular],
            "length": 2,
            "tail": [Circular],
          },
          "next": null,
          "prev": [Circular],
          "value": Entry {
            "key": "2",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test",
          },
        },
        "prev": null,
        "value": Entry {
          "key": "1",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
      "2" => Node {
        "list": Yallist {
          "head": Node {
            "list": [Circular],
            "next": [Circular],
            "prev": null,
            "value": Entry {
              "key": "1",
              "length": 1,
              "maxAge": 0,
              "now": 0,
              "value": "hi test",
            },
          },
          "length": 2,
          "tail": [Circular],
        },
        "next": null,
        "prev": Node {
          "list": Yallist {
            "head": [Circular],
            "length": 2,
            "tail": [Circular],
          },
          "next": [Circular],
          "prev": null,
          "value": Entry {
            "key": "1",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test",
          },
        },
        "value": Entry {
          "key": "2",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
    },
    Symbol(lruList): Yallist {
      "head": Node {
        "list": [Circular],
        "next": Node {
          "list": [Circular],
          "next": null,
          "prev": [Circular],
          "value": Entry {
            "key": "2",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test",
          },
        },
        "prev": null,
        "value": Entry {
          "key": "1",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
      "length": 2,
      "tail": Node {
        "list": [Circular],
        "next": null,
        "prev": Node {
          "list": [Circular],
          "next": [Circular],
          "prev": null,
          "value": Entry {
            "key": "1",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test",
          },
        },
        "value": Entry {
          "key": "2",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
    },
    Symbol(length): 2,
  },
}
`;

exports[`cache put cache muliple cachenames 1`] = `"hi test"`;

exports[`cache put cache muliple cachenames 2`] = `"hi test"`;

exports[`cache put cache muliple cachenames 3`] = `
MemoryCache {
  "name": "hi",
  "options": undefined,
  "store": LRUCache {
    Symbol(max): Infinity,
    Symbol(lengthCalculator): [Function],
    Symbol(allowStale): false,
    Symbol(maxAge): 0,
    Symbol(dispose): undefined,
    Symbol(noDisposeOnSet): false,
    Symbol(cache): Map {
      "test" => Node {
        "list": Yallist {
          "head": [Circular],
          "length": 1,
          "tail": [Circular],
        },
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "test",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
    },
    Symbol(lruList): Yallist {
      "head": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "test",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
      "length": 1,
      "tail": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "test",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
    },
    Symbol(length): 1,
  },
}
`;

exports[`cache put cache muliple cachenames 4`] = `
MemoryCache {
  "name": "hi2",
  "options": undefined,
  "store": LRUCache {
    Symbol(max): Infinity,
    Symbol(lengthCalculator): [Function],
    Symbol(allowStale): false,
    Symbol(maxAge): 0,
    Symbol(dispose): undefined,
    Symbol(noDisposeOnSet): false,
    Symbol(cache): Map {
      "test" => Node {
        "list": Yallist {
          "head": [Circular],
          "length": 1,
          "tail": [Circular],
        },
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "test",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
    },
    Symbol(lruList): Yallist {
      "head": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "test",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
      "length": 1,
      "tail": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "test",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
    },
    Symbol(length): 1,
  },
}
`;

exports[`cache put cache muliple cachenames 5`] = `"hi test2"`;

exports[`cache put cache muliple cachenames 6`] = `
MemoryCache {
  "name": "hi",
  "options": undefined,
  "store": LRUCache {
    Symbol(max): Infinity,
    Symbol(lengthCalculator): [Function],
    Symbol(allowStale): false,
    Symbol(maxAge): 0,
    Symbol(dispose): undefined,
    Symbol(noDisposeOnSet): false,
    Symbol(cache): Map {
      "test" => Node {
        "list": Yallist {
          "head": Node {
            "list": [Circular],
            "next": [Circular],
            "prev": null,
            "value": Entry {
              "key": "test2",
              "length": 1,
              "maxAge": 0,
              "now": 0,
              "value": "hi test2",
            },
          },
          "length": 2,
          "tail": [Circular],
        },
        "next": null,
        "prev": Node {
          "list": Yallist {
            "head": [Circular],
            "length": 2,
            "tail": [Circular],
          },
          "next": [Circular],
          "prev": null,
          "value": Entry {
            "key": "test2",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test2",
          },
        },
        "value": Entry {
          "key": "test",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
      "test2" => Node {
        "list": Yallist {
          "head": [Circular],
          "length": 2,
          "tail": Node {
            "list": [Circular],
            "next": null,
            "prev": [Circular],
            "value": Entry {
              "key": "test",
              "length": 1,
              "maxAge": 0,
              "now": 0,
              "value": "hi test",
            },
          },
        },
        "next": Node {
          "list": Yallist {
            "head": [Circular],
            "length": 2,
            "tail": [Circular],
          },
          "next": null,
          "prev": [Circular],
          "value": Entry {
            "key": "test",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test",
          },
        },
        "prev": null,
        "value": Entry {
          "key": "test2",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test2",
        },
      },
    },
    Symbol(lruList): Yallist {
      "head": Node {
        "list": [Circular],
        "next": Node {
          "list": [Circular],
          "next": null,
          "prev": [Circular],
          "value": Entry {
            "key": "test",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test",
          },
        },
        "prev": null,
        "value": Entry {
          "key": "test2",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test2",
        },
      },
      "length": 2,
      "tail": Node {
        "list": [Circular],
        "next": null,
        "prev": Node {
          "list": [Circular],
          "next": [Circular],
          "prev": null,
          "value": Entry {
            "key": "test2",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test2",
          },
        },
        "value": Entry {
          "key": "test",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
    },
    Symbol(length): 2,
  },
}
`;

exports[`cache put cache muliple cachenames 7`] = `
MemoryCache {
  "name": "hi2",
  "options": undefined,
  "store": LRUCache {
    Symbol(max): Infinity,
    Symbol(lengthCalculator): [Function],
    Symbol(allowStale): false,
    Symbol(maxAge): 0,
    Symbol(dispose): undefined,
    Symbol(noDisposeOnSet): false,
    Symbol(cache): Map {
      "test" => Node {
        "list": Yallist {
          "head": Node {
            "list": [Circular],
            "next": [Circular],
            "prev": null,
            "value": Entry {
              "key": "test2",
              "length": 1,
              "maxAge": 0,
              "now": 0,
              "value": "hi test2",
            },
          },
          "length": 2,
          "tail": [Circular],
        },
        "next": null,
        "prev": Node {
          "list": Yallist {
            "head": [Circular],
            "length": 2,
            "tail": [Circular],
          },
          "next": [Circular],
          "prev": null,
          "value": Entry {
            "key": "test2",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test2",
          },
        },
        "value": Entry {
          "key": "test",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
      "test2" => Node {
        "list": Yallist {
          "head": [Circular],
          "length": 2,
          "tail": Node {
            "list": [Circular],
            "next": null,
            "prev": [Circular],
            "value": Entry {
              "key": "test",
              "length": 1,
              "maxAge": 0,
              "now": 0,
              "value": "hi test",
            },
          },
        },
        "next": Node {
          "list": Yallist {
            "head": [Circular],
            "length": 2,
            "tail": [Circular],
          },
          "next": null,
          "prev": [Circular],
          "value": Entry {
            "key": "test",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test",
          },
        },
        "prev": null,
        "value": Entry {
          "key": "test2",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test2",
        },
      },
    },
    Symbol(lruList): Yallist {
      "head": Node {
        "list": [Circular],
        "next": Node {
          "list": [Circular],
          "next": null,
          "prev": [Circular],
          "value": Entry {
            "key": "test",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test",
          },
        },
        "prev": null,
        "value": Entry {
          "key": "test2",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test2",
        },
      },
      "length": 2,
      "tail": Node {
        "list": [Circular],
        "next": null,
        "prev": Node {
          "list": [Circular],
          "next": [Circular],
          "prev": null,
          "value": Entry {
            "key": "test2",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test2",
          },
        },
        "value": Entry {
          "key": "test",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
    },
    Symbol(length): 2,
  },
}
`;

exports[`cache put cache muliple cachenames 8`] = `"hi test"`;

exports[`cache put cache muliple cachenames 9`] = `"hi test"`;

exports[`cache put cache muliple cachenames 10`] = `
MemoryCache {
  "name": "hi",
  "options": undefined,
  "store": LRUCache {
    Symbol(max): Infinity,
    Symbol(lengthCalculator): [Function],
    Symbol(allowStale): false,
    Symbol(maxAge): 0,
    Symbol(dispose): undefined,
    Symbol(noDisposeOnSet): false,
    Symbol(cache): Map {
      "test" => Node {
        "list": Yallist {
          "head": [Circular],
          "length": 1,
          "tail": [Circular],
        },
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "test",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
    },
    Symbol(lruList): Yallist {
      "head": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "test",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
      "length": 1,
      "tail": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "test",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
    },
    Symbol(length): 1,
  },
}
`;

exports[`cache put cache muliple cachenames 11`] = `
MemoryCache {
  "name": "hi2",
  "options": undefined,
  "store": LRUCache {
    Symbol(max): Infinity,
    Symbol(lengthCalculator): [Function],
    Symbol(allowStale): false,
    Symbol(maxAge): 0,
    Symbol(dispose): undefined,
    Symbol(noDisposeOnSet): false,
    Symbol(cache): Map {
      "test" => Node {
        "list": Yallist {
          "head": [Circular],
          "length": 1,
          "tail": [Circular],
        },
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "test",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
    },
    Symbol(lruList): Yallist {
      "head": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "test",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
      "length": 1,
      "tail": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "test",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
    },
    Symbol(length): 1,
  },
}
`;

exports[`cache put cache muliple cachenames 12`] = `"hi test2"`;

exports[`cache put cache muliple cachenames 13`] = `
MemoryCache {
  "name": "hi",
  "options": undefined,
  "store": LRUCache {
    Symbol(max): Infinity,
    Symbol(lengthCalculator): [Function],
    Symbol(allowStale): false,
    Symbol(maxAge): 0,
    Symbol(dispose): undefined,
    Symbol(noDisposeOnSet): false,
    Symbol(cache): Map {
      "test" => Node {
        "list": Yallist {
          "head": Node {
            "list": [Circular],
            "next": [Circular],
            "prev": null,
            "value": Entry {
              "key": "test2",
              "length": 1,
              "maxAge": 0,
              "now": 0,
              "value": "hi test2",
            },
          },
          "length": 2,
          "tail": [Circular],
        },
        "next": null,
        "prev": Node {
          "list": Yallist {
            "head": [Circular],
            "length": 2,
            "tail": [Circular],
          },
          "next": [Circular],
          "prev": null,
          "value": Entry {
            "key": "test2",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test2",
          },
        },
        "value": Entry {
          "key": "test",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
      "test2" => Node {
        "list": Yallist {
          "head": [Circular],
          "length": 2,
          "tail": Node {
            "list": [Circular],
            "next": null,
            "prev": [Circular],
            "value": Entry {
              "key": "test",
              "length": 1,
              "maxAge": 0,
              "now": 0,
              "value": "hi test",
            },
          },
        },
        "next": Node {
          "list": Yallist {
            "head": [Circular],
            "length": 2,
            "tail": [Circular],
          },
          "next": null,
          "prev": [Circular],
          "value": Entry {
            "key": "test",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test",
          },
        },
        "prev": null,
        "value": Entry {
          "key": "test2",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test2",
        },
      },
    },
    Symbol(lruList): Yallist {
      "head": Node {
        "list": [Circular],
        "next": Node {
          "list": [Circular],
          "next": null,
          "prev": [Circular],
          "value": Entry {
            "key": "test",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test",
          },
        },
        "prev": null,
        "value": Entry {
          "key": "test2",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test2",
        },
      },
      "length": 2,
      "tail": Node {
        "list": [Circular],
        "next": null,
        "prev": Node {
          "list": [Circular],
          "next": [Circular],
          "prev": null,
          "value": Entry {
            "key": "test2",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test2",
          },
        },
        "value": Entry {
          "key": "test",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
    },
    Symbol(length): 2,
  },
}
`;

exports[`cache put cache muliple cachenames 14`] = `
MemoryCache {
  "name": "hi2",
  "options": undefined,
  "store": LRUCache {
    Symbol(max): Infinity,
    Symbol(lengthCalculator): [Function],
    Symbol(allowStale): false,
    Symbol(maxAge): 0,
    Symbol(dispose): undefined,
    Symbol(noDisposeOnSet): false,
    Symbol(cache): Map {
      "test" => Node {
        "list": Yallist {
          "head": Node {
            "list": [Circular],
            "next": [Circular],
            "prev": null,
            "value": Entry {
              "key": "test2",
              "length": 1,
              "maxAge": 0,
              "now": 0,
              "value": "hi test2",
            },
          },
          "length": 2,
          "tail": [Circular],
        },
        "next": null,
        "prev": Node {
          "list": Yallist {
            "head": [Circular],
            "length": 2,
            "tail": [Circular],
          },
          "next": [Circular],
          "prev": null,
          "value": Entry {
            "key": "test2",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test2",
          },
        },
        "value": Entry {
          "key": "test",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
      "test2" => Node {
        "list": Yallist {
          "head": [Circular],
          "length": 2,
          "tail": Node {
            "list": [Circular],
            "next": null,
            "prev": [Circular],
            "value": Entry {
              "key": "test",
              "length": 1,
              "maxAge": 0,
              "now": 0,
              "value": "hi test",
            },
          },
        },
        "next": Node {
          "list": Yallist {
            "head": [Circular],
            "length": 2,
            "tail": [Circular],
          },
          "next": null,
          "prev": [Circular],
          "value": Entry {
            "key": "test",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test",
          },
        },
        "prev": null,
        "value": Entry {
          "key": "test2",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test2",
        },
      },
    },
    Symbol(lruList): Yallist {
      "head": Node {
        "list": [Circular],
        "next": Node {
          "list": [Circular],
          "next": null,
          "prev": [Circular],
          "value": Entry {
            "key": "test",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test",
          },
        },
        "prev": null,
        "value": Entry {
          "key": "test2",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test2",
        },
      },
      "length": 2,
      "tail": Node {
        "list": [Circular],
        "next": null,
        "prev": Node {
          "list": [Circular],
          "next": [Circular],
          "prev": null,
          "value": Entry {
            "key": "test2",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test2",
          },
        },
        "value": Entry {
          "key": "test",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test",
        },
      },
    },
    Symbol(length): 2,
  },
}
`;

exports[`cache put cache unless + key + condition 1`] = `1`;

exports[`cache put cache unless + key + condition 2`] = `2`;

exports[`cache put cache unless + key + condition 3`] = `3`;

exports[`cache put cache unless + key + condition 4`] = `
MemoryCache {
  "name": "hi",
  "options": undefined,
  "store": LRUCache {
    Symbol(max): Infinity,
    Symbol(lengthCalculator): [Function],
    Symbol(allowStale): false,
    Symbol(maxAge): 0,
    Symbol(dispose): undefined,
    Symbol(noDisposeOnSet): false,
    Symbol(cache): Map {
      "3" => Node {
        "list": Yallist {
          "head": [Circular],
          "length": 1,
          "tail": [Circular],
        },
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "3",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": 3,
        },
      },
    },
    Symbol(lruList): Yallist {
      "head": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "3",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": 3,
        },
      },
      "length": 1,
      "tail": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "3",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": 3,
        },
      },
    },
    Symbol(length): 1,
  },
}
`;

exports[`cache put cache unless + key + condition 5`] = `1`;

exports[`cache put cache unless + key + condition 6`] = `
MemoryCache {
  "name": "hi",
  "options": undefined,
  "store": LRUCache {
    Symbol(max): Infinity,
    Symbol(lengthCalculator): [Function],
    Symbol(allowStale): false,
    Symbol(maxAge): 0,
    Symbol(dispose): undefined,
    Symbol(noDisposeOnSet): false,
    Symbol(cache): Map {
      "3" => Node {
        "list": Yallist {
          "head": [Circular],
          "length": 1,
          "tail": [Circular],
        },
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "3",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": 3,
        },
      },
    },
    Symbol(lruList): Yallist {
      "head": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "3",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": 3,
        },
      },
      "length": 1,
      "tail": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "3",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": 3,
        },
      },
    },
    Symbol(length): 1,
  },
}
`;

exports[`cache put cache unless + key 1`] = `1`;

exports[`cache put cache unless + key 2`] = `2`;

exports[`cache put cache unless + key 3`] = `
MemoryCache {
  "name": "hi",
  "options": undefined,
  "store": LRUCache {
    Symbol(max): Infinity,
    Symbol(lengthCalculator): [Function],
    Symbol(allowStale): false,
    Symbol(maxAge): 0,
    Symbol(dispose): undefined,
    Symbol(noDisposeOnSet): false,
    Symbol(cache): Map {
      "2" => Node {
        "list": Yallist {
          "head": [Circular],
          "length": 1,
          "tail": [Circular],
        },
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "2",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": 2,
        },
      },
    },
    Symbol(lruList): Yallist {
      "head": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "2",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": 2,
        },
      },
      "length": 1,
      "tail": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "2",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": 2,
        },
      },
    },
    Symbol(length): 1,
  },
}
`;

exports[`cache put cache unless + key 4`] = `1`;

exports[`cache put cache unless + key 5`] = `
MemoryCache {
  "name": "hi",
  "options": undefined,
  "store": LRUCache {
    Symbol(max): Infinity,
    Symbol(lengthCalculator): [Function],
    Symbol(allowStale): false,
    Symbol(maxAge): 0,
    Symbol(dispose): undefined,
    Symbol(noDisposeOnSet): false,
    Symbol(cache): Map {
      "2" => Node {
        "list": Yallist {
          "head": [Circular],
          "length": 1,
          "tail": [Circular],
        },
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "2",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": 2,
        },
      },
    },
    Symbol(lruList): Yallist {
      "head": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "2",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": 2,
        },
      },
      "length": 1,
      "tail": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "2",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": 2,
        },
      },
    },
    Symbol(length): 1,
  },
}
`;

exports[`cache put cache unless 1`] = `1`;

exports[`cache put cache unless 2`] = `2`;

exports[`cache put cache unless 3`] = `
MemoryCache {
  "name": "hi",
  "options": undefined,
  "store": LRUCache {
    Symbol(max): Infinity,
    Symbol(lengthCalculator): [Function],
    Symbol(allowStale): false,
    Symbol(maxAge): 0,
    Symbol(dispose): undefined,
    Symbol(noDisposeOnSet): false,
    Symbol(cache): Map {
      "{\\"name\\":\\"test\\",\\"id\\":2}" => Node {
        "list": Yallist {
          "head": [Circular],
          "length": 1,
          "tail": [Circular],
        },
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "{\\"name\\":\\"test\\",\\"id\\":2}",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": 2,
        },
      },
    },
    Symbol(lruList): Yallist {
      "head": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "{\\"name\\":\\"test\\",\\"id\\":2}",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": 2,
        },
      },
      "length": 1,
      "tail": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "{\\"name\\":\\"test\\",\\"id\\":2}",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": 2,
        },
      },
    },
    Symbol(length): 1,
  },
}
`;

exports[`cache put cache unless 4`] = `1`;

exports[`cache put cache unless 5`] = `
MemoryCache {
  "name": "hi",
  "options": undefined,
  "store": LRUCache {
    Symbol(max): Infinity,
    Symbol(lengthCalculator): [Function],
    Symbol(allowStale): false,
    Symbol(maxAge): 0,
    Symbol(dispose): undefined,
    Symbol(noDisposeOnSet): false,
    Symbol(cache): Map {
      "{\\"name\\":\\"test\\",\\"id\\":2}" => Node {
        "list": Yallist {
          "head": [Circular],
          "length": 1,
          "tail": [Circular],
        },
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "{\\"name\\":\\"test\\",\\"id\\":2}",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": 2,
        },
      },
    },
    Symbol(lruList): Yallist {
      "head": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "{\\"name\\":\\"test\\",\\"id\\":2}",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": 2,
        },
      },
      "length": 1,
      "tail": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "{\\"name\\":\\"test\\",\\"id\\":2}",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": 2,
        },
      },
    },
    Symbol(length): 1,
  },
}
`;

exports[`cache put errors Throw error when @CachePut on a sync method 1`] = `"Cacheable must decorate an async method"`;

exports[`cache put errors error on condition 1`] = `"hi test test"`;

exports[`cache put errors error on condition 2`] = `"hi test test"`;

exports[`cache put errors error on condition 3`] = `
MemoryCache {
  "name": "hi",
  "options": undefined,
  "store": LRUCache {
    Symbol(max): Infinity,
    Symbol(lengthCalculator): [Function],
    Symbol(allowStale): false,
    Symbol(maxAge): 0,
    Symbol(dispose): undefined,
    Symbol(noDisposeOnSet): false,
    Symbol(cache): Map {},
    Symbol(lruList): Yallist {
      "head": null,
      "length": 0,
      "tail": null,
    },
    Symbol(length): 0,
  },
}
`;

exports[`cache put errors error on condition 4`] = `"hi test2 test2"`;

exports[`cache put errors error on condition 5`] = `
MemoryCache {
  "name": "hi",
  "options": undefined,
  "store": LRUCache {
    Symbol(max): Infinity,
    Symbol(lengthCalculator): [Function],
    Symbol(allowStale): false,
    Symbol(maxAge): 0,
    Symbol(dispose): undefined,
    Symbol(noDisposeOnSet): false,
    Symbol(cache): Map {},
    Symbol(lruList): Yallist {
      "head": null,
      "length": 0,
      "tail": null,
    },
    Symbol(length): 0,
  },
}
`;

exports[`cache put errors error on key 1`] = `"hi test test"`;

exports[`cache put errors error on key 2`] = `"hi test test"`;

exports[`cache put errors error on key 3`] = `
MemoryCache {
  "name": "hi",
  "options": undefined,
  "store": LRUCache {
    Symbol(max): Infinity,
    Symbol(lengthCalculator): [Function],
    Symbol(allowStale): false,
    Symbol(maxAge): 0,
    Symbol(dispose): undefined,
    Symbol(noDisposeOnSet): false,
    Symbol(cache): Map {},
    Symbol(lruList): Yallist {
      "head": null,
      "length": 0,
      "tail": null,
    },
    Symbol(length): 0,
  },
}
`;

exports[`cache put errors error on key 4`] = `"hi test2 test2"`;

exports[`cache put errors error on key 5`] = `
MemoryCache {
  "name": "hi",
  "options": undefined,
  "store": LRUCache {
    Symbol(max): Infinity,
    Symbol(lengthCalculator): [Function],
    Symbol(allowStale): false,
    Symbol(maxAge): 0,
    Symbol(dispose): undefined,
    Symbol(noDisposeOnSet): false,
    Symbol(cache): Map {},
    Symbol(lruList): Yallist {
      "head": null,
      "length": 0,
      "tail": null,
    },
    Symbol(length): 0,
  },
}
`;

exports[`cache put simple cache 1`] = `"hi test test"`;

exports[`cache put simple cache 2`] = `"hi test test"`;

exports[`cache put simple cache 3`] = `
MemoryCache {
  "name": "hi",
  "options": undefined,
  "store": LRUCache {
    Symbol(max): Infinity,
    Symbol(lengthCalculator): [Function],
    Symbol(allowStale): false,
    Symbol(maxAge): 0,
    Symbol(dispose): undefined,
    Symbol(noDisposeOnSet): false,
    Symbol(cache): Map {
      "testtest" => Node {
        "list": Yallist {
          "head": [Circular],
          "length": 1,
          "tail": [Circular],
        },
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "testtest",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test test",
        },
      },
    },
    Symbol(lruList): Yallist {
      "head": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "testtest",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test test",
        },
      },
      "length": 1,
      "tail": Node {
        "list": [Circular],
        "next": null,
        "prev": null,
        "value": Entry {
          "key": "testtest",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test test",
        },
      },
    },
    Symbol(length): 1,
  },
}
`;

exports[`cache put simple cache 4`] = `"hi test2 test2"`;

exports[`cache put simple cache 5`] = `
MemoryCache {
  "name": "hi",
  "options": undefined,
  "store": LRUCache {
    Symbol(max): Infinity,
    Symbol(lengthCalculator): [Function],
    Symbol(allowStale): false,
    Symbol(maxAge): 0,
    Symbol(dispose): undefined,
    Symbol(noDisposeOnSet): false,
    Symbol(cache): Map {
      "testtest" => Node {
        "list": Yallist {
          "head": Node {
            "list": [Circular],
            "next": [Circular],
            "prev": null,
            "value": Entry {
              "key": "test2test2",
              "length": 1,
              "maxAge": 0,
              "now": 0,
              "value": "hi test2 test2",
            },
          },
          "length": 2,
          "tail": [Circular],
        },
        "next": null,
        "prev": Node {
          "list": Yallist {
            "head": [Circular],
            "length": 2,
            "tail": [Circular],
          },
          "next": [Circular],
          "prev": null,
          "value": Entry {
            "key": "test2test2",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test2 test2",
          },
        },
        "value": Entry {
          "key": "testtest",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test test",
        },
      },
      "test2test2" => Node {
        "list": Yallist {
          "head": [Circular],
          "length": 2,
          "tail": Node {
            "list": [Circular],
            "next": null,
            "prev": [Circular],
            "value": Entry {
              "key": "testtest",
              "length": 1,
              "maxAge": 0,
              "now": 0,
              "value": "hi test test",
            },
          },
        },
        "next": Node {
          "list": Yallist {
            "head": [Circular],
            "length": 2,
            "tail": [Circular],
          },
          "next": null,
          "prev": [Circular],
          "value": Entry {
            "key": "testtest",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test test",
          },
        },
        "prev": null,
        "value": Entry {
          "key": "test2test2",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test2 test2",
        },
      },
    },
    Symbol(lruList): Yallist {
      "head": Node {
        "list": [Circular],
        "next": Node {
          "list": [Circular],
          "next": null,
          "prev": [Circular],
          "value": Entry {
            "key": "testtest",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test test",
          },
        },
        "prev": null,
        "value": Entry {
          "key": "test2test2",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test2 test2",
        },
      },
      "length": 2,
      "tail": Node {
        "list": [Circular],
        "next": null,
        "prev": Node {
          "list": [Circular],
          "next": [Circular],
          "prev": null,
          "value": Entry {
            "key": "test2test2",
            "length": 1,
            "maxAge": 0,
            "now": 0,
            "value": "hi test2 test2",
          },
        },
        "value": Entry {
          "key": "testtest",
          "length": 1,
          "maxAge": 0,
          "now": 0,
          "value": "hi test test",
        },
      },
    },
    Symbol(length): 2,
  },
}
`;
