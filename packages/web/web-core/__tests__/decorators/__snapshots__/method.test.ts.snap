// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Methods decorators should add Methods metadata to a class when decorated with @All 1`] = `
Array [
  DecoratorFactory {
    "json": false,
    "name": undefined,
    "path": "/test",
  },
  DecoratorFactory {
    "id": [Function],
    "type": "ControllerType",
  },
]
`;

exports[`Methods decorators should add Methods metadata to a class when decorated with @All 2`] = `
Object {
  "test": Array [
    PropDecoratorFactory {
      "method": "all",
      "path": "/All",
    },
  ],
  "test2": Array [
    PropDecoratorFactory {
      "method": "all",
      "path": "/All2",
    },
  ],
}
`;

exports[`Methods decorators should add Methods metadata to a class when decorated with @Delete 1`] = `
Array [
  DecoratorFactory {
    "json": false,
    "name": undefined,
    "path": "/test",
  },
  DecoratorFactory {
    "id": [Function],
    "type": "ControllerType",
  },
]
`;

exports[`Methods decorators should add Methods metadata to a class when decorated with @Delete 2`] = `
Object {
  "test": Array [
    PropDecoratorFactory {
      "method": "delete",
      "path": "/Delete",
    },
  ],
  "test2": Array [
    PropDecoratorFactory {
      "method": "delete",
      "path": "/Delete2",
    },
  ],
}
`;

exports[`Methods decorators should add Methods metadata to a class when decorated with @Get 1`] = `
Array [
  DecoratorFactory {
    "json": false,
    "name": undefined,
    "path": "/test",
  },
  DecoratorFactory {
    "id": [Function],
    "type": "ControllerType",
  },
]
`;

exports[`Methods decorators should add Methods metadata to a class when decorated with @Get 2`] = `
Object {
  "test": Array [
    PropDecoratorFactory {
      "method": "get",
      "path": "/Get",
    },
  ],
  "test2": Array [
    PropDecoratorFactory {
      "method": "get",
      "path": "/Get2",
    },
  ],
}
`;

exports[`Methods decorators should add Methods metadata to a class when decorated with @Head 1`] = `
Array [
  DecoratorFactory {
    "json": false,
    "name": undefined,
    "path": "/test",
  },
  DecoratorFactory {
    "id": [Function],
    "type": "ControllerType",
  },
]
`;

exports[`Methods decorators should add Methods metadata to a class when decorated with @Head 2`] = `
Object {
  "test": Array [
    PropDecoratorFactory {
      "method": "head",
      "path": "/Head",
    },
  ],
  "test2": Array [
    PropDecoratorFactory {
      "method": "head",
      "path": "/Head2",
    },
  ],
}
`;

exports[`Methods decorators should add Methods metadata to a class when decorated with @Patch 1`] = `
Array [
  DecoratorFactory {
    "json": false,
    "name": undefined,
    "path": "/test",
  },
  DecoratorFactory {
    "id": [Function],
    "type": "ControllerType",
  },
]
`;

exports[`Methods decorators should add Methods metadata to a class when decorated with @Patch 2`] = `
Object {
  "test": Array [
    PropDecoratorFactory {
      "method": "patch",
      "path": "/Patch",
    },
  ],
  "test2": Array [
    PropDecoratorFactory {
      "method": "patch",
      "path": "/Patch2",
    },
  ],
}
`;

exports[`Methods decorators should add Methods metadata to a class when decorated with @Post 1`] = `
Array [
  DecoratorFactory {
    "json": false,
    "name": undefined,
    "path": "/test",
  },
  DecoratorFactory {
    "id": [Function],
    "type": "ControllerType",
  },
]
`;

exports[`Methods decorators should add Methods metadata to a class when decorated with @Post 2`] = `
Object {
  "test": Array [
    PropDecoratorFactory {
      "method": "post",
      "path": "/Post",
    },
  ],
  "test2": Array [
    PropDecoratorFactory {
      "method": "post",
      "path": "/Post2",
    },
  ],
}
`;

exports[`Methods decorators should add Methods metadata to a class when decorated with @Put 1`] = `
Array [
  DecoratorFactory {
    "json": false,
    "name": undefined,
    "path": "/test",
  },
  DecoratorFactory {
    "id": [Function],
    "type": "ControllerType",
  },
]
`;

exports[`Methods decorators should add Methods metadata to a class when decorated with @Put 2`] = `
Object {
  "test": Array [
    PropDecoratorFactory {
      "method": "put",
      "path": "/Put",
    },
  ],
  "test2": Array [
    PropDecoratorFactory {
      "method": "put",
      "path": "/Put2",
    },
  ],
}
`;

exports[`Methods decorators should add method metadata to a class when decorated with @httpMethod 1`] = `
Array [
  DecoratorFactory {
    "json": false,
    "name": undefined,
    "path": "/test",
  },
  DecoratorFactory {
    "id": [Function],
    "type": "ControllerType",
  },
]
`;

exports[`Methods decorators should add method metadata to a class when decorated with @httpMethod 2`] = `
Object {
  "test": Array [
    PropDecoratorFactory {
      "method": "get",
      "path": "foo",
    },
  ],
  "test2": Array [
    PropDecoratorFactory {
      "method": "foo",
      "path": "bar",
    },
  ],
  "test3": Array [
    PropDecoratorFactory {
      "method": "bar",
      "path": "foo",
    },
  ],
}
`;
